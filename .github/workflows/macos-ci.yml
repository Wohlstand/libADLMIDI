name: macOS CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: "${{ matrix.config.name }} | ${{ matrix.config.build_type }}"
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Intel x64",
            arch: "x86_64",
            os: macos-15-intel,
            osx_target: "10.12",
            generator: "Ninja",
            build_type: "Release",
            upload_directory: "www/macosx/",

            deps_cmdline: "brew install sdl2 ninja"
          }
        - {
            name: "Apple Silicon",
            arch: "arm64",
            os: macos-15,
            osx_target: "10.13",
            generator: "Ninja",
            build_type: "Release",
            upload_directory: "www/macosx/",

            deps_cmdline: "brew install sdl2 ninja"
          }

    steps:
    - name: Check for the upload support
      id: upload-check
      shell: bash
      run: |
        if [[ "${{ secrets.builds_login }}" != '' && \
              "${{ secrets.builds_password }}" != '' && \
              "${{ secrets.builds_host }}" != '' ]]; then
          echo "available=true" >> $GITHUB_OUTPUT;
        else
          echo "available=false" >> $GITHUB_OUTPUT;
        fi

    - name: Install Dependencies
      shell: bash
      run: |
        if [[ ! -z "${{ matrix.config.deps_cmdline }}" ]]; then
          eval ${{ matrix.config.deps_cmdline }}
        fi
        cmake --version

    - uses: actions/checkout@v3
      with:
        fetch-depth: 3
        submodules: recursive

    - uses: Wohlstand/branch-name@v1.0.1-wohl

    - name: Check if a pull request
      id: event-check
      shell: bash
      run: |
        if [[ "${BRANCH_NAME}" == *"merge"* ]]; then
          echo "--- This build is a pull-request ---"
          echo "is_pull_request=true" >> $GITHUB_OUTPUT;
        else
          echo "--- This build is a normal branch build ---"
          echo "is_pull_request=false" >> $GITHUB_OUTPUT;
        fi

    - name: Configure
      shell: bash
      run: |
        if [[ ! -z "${{ matrix.config.extra_path }}" ]]; then
          export PATH=${{ matrix.config.extra_path }}:${PATH}
          echo "PATH environment: ${PATH}"
        fi
        echo "====================================="
        gcc --version
        echo "====================================="
        git --version
        echo "====================================="
        cmake --version
        echo "====================================="
        cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} -DCMAKE_INSTALL_PREFIX="`pwd`/libADLMIDI" ${{ matrix.config.extra_options }} -DWITH_MIDIPLAY=OFF -DWITH_OLD_UTILS=ON -DWITH_GENADLDATA=OFF -DWITH_CPP_EXTRAS=ON -DWITH_ADLMIDI2=OFF -DEXAMPLE_SDL2_AUDIO=OFF -DWITH_VLC_PLUGIN=OFF -DVLC_PLUGIN_NOINSTALL=ON -DlibADLMIDI_SHARED=ON -DlibADLMIDI_STATIC=ON -DWITH_UNIT_TESTS=ON .

    - name: Build
      shell: bash
      run: |
        if [[ ! -z "${{ matrix.config.extra_path }}" ]]; then
          export PATH=${{ matrix.config.extra_path }}:${PATH}
          export QT_DIR="${{ matrix.config.qt_dir }}"
          export QtDir="${{ matrix.config.qt_dir }}"
        fi
        export MAKEFLAGS=--keep-going
        cmake --build build --target all --config ${{ matrix.config.build_type }} --parallel 3

    - name: Install
      shell: bash
      run: |
        if [[ ! -z "${{ matrix.config.extra_path }}" ]]; then
          export PATH=${{ matrix.config.extra_path }}:${PATH}
          export QT_DIR="${{ matrix.config.qt_dir }}"
          export QtDir="${{ matrix.config.qt_dir }}"
        fi
        export MAKEFLAGS=--keep-going
        cmake --build build --target install --config ${{ matrix.config.build_type }}

#    - name: Deploy
#      shell: bash
#      run: |
#        if [[ ! -z "${{ matrix.config.extra_path }}" ]]; then
#          export PATH=${{ matrix.config.extra_path }}:${PATH}
#          export QT_DIR="${{ matrix.config.qt_dir }}"
#          export QtDir="${{ matrix.config.qt_dir }}"
#        fi
#        export MAKEFLAGS=--keep-going
#        cmake --build build --target windeploy --config ${{ matrix.config.build_type }}
#        cmake --build build --target enable_portable
#        cmake --build build --target put_online_help
#        cmake --build build --target create_zip
#        cmake --build build --target create_zip_tools
#        cmake --build build --target create_zip_install
#        mkdir _packed
#        mv bin-cmake-release/_packed/*.zip _packed

#    - name: Deploy to builds.wohlsoft.ru
#      if: success() && github.event_name != 'pull_request' && steps.event-check.outputs.is_pull_request == 'false' && steps.upload-check.outputs.available == 'true'
#      shell: bash
#      run: |
#        if [[ ! -z "${{ matrix.config.extra_path }}" ]]; then
#            export PATH=${{ matrix.config.extra_path }}:${PATH}
#        fi
#        UPLOAD_LIST="set ssl:verify-certificate no;"
#        for q in ./_packed/*.zip; do
#            UPLOAD_LIST="${UPLOAD_LIST} put -O ${{ matrix.config.upload_directory }} $q;"
#        done
#        lftp -e "${UPLOAD_LIST} exit" -u ${{ secrets.builds_login }},${{ secrets.builds_password }} ${{ secrets.builds_host }}

    - name: List Build Directory
      if: always()
      shell: bash
      run: |
        git status
        ls -lR build
